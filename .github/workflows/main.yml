name: Mi primer Pipeline

on:
  #Ejecutar cada que se realice un push
  push:
    branches:
    - main
    - release/*
  pull_request:
    types: [opened, synchronize, reopened, reiew_requested]
    branches:
    - main
  #Ejecutar de manera programada
  schedule:
    - cron: "0 2 * * 1-5"
  #Permitir ejecutar manualmente
  workflow_dispatch:


jobs:
    correr-tests:
      runs-on: ubuntu-latest

      steps:
        - name: Realizamos un checkout a la rama
          uses: actions/checkout@v2

        - name: Usamos Node.js 20.x
          uses: actions/setup-node@v4
          with:
              node-version: '20.x'
              cache: 'npm'

        - name: Instalamos dependencias y realizamos el build
          run: |
            npm install
            npm run build --if-present

    #    - name: Corremos el linter
          #run: npm run lint

        - name: Corremos las pruebas unitarias y de inteegracion con su covertura
          run: npm run test:cov

        - name: Corremos las pruebas end-to-end
          run: npm run test:e2e

        - name: Actualizamos el artefacto on el reporte de covertura de los test
          uses: actions/upload-artifact@v4
          with:
            name: coverage-repor
            path: coverage/
            retention-days: 7
            if-no-files-found: error

    crear-artefacto:
      needs: correr-tests
      runs-on: ubuntu-latest
  
      steps:
      - uses: actions/checkout@v4
      
      - name: Usamos Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Instalamos las dependencias
        run: npm ci
      
      - name: Realizamos el build de la aplicaci√≥n
        run: npm run build
      
      - name: Actualizamos el artefacto
        uses: actions/upload-artifact@v4
        with:
          name: artifact
          path: dist/
          retention-days: 7
          if-no-files-found: error
            
